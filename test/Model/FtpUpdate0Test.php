<?php
/**
 * FtpUpdate0Test
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  RMoore\Truenas
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TrueNAS RESTful API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace RMoore\Truenas\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * FtpUpdate0Test Class Doc Comment
 *
 * @category    Class
 * @description FtpUpdate0
 * @package     RMoore\Truenas
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class FtpUpdate0Test extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "FtpUpdate0"
     */
    public function testFtpUpdate0()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "port"
     */
    public function testPropertyPort()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clients"
     */
    public function testPropertyClients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ipconnections"
     */
    public function testPropertyIpconnections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loginattempt"
     */
    public function testPropertyLoginattempt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeout"
     */
    public function testPropertyTimeout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeout_notransfer"
     */
    public function testPropertyTimeoutNotransfer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rootlogin"
     */
    public function testPropertyRootlogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "onlyanonymous"
     */
    public function testPropertyOnlyanonymous()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anonpath"
     */
    public function testPropertyAnonpath()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "onlylocal"
     */
    public function testPropertyOnlylocal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "banner"
     */
    public function testPropertyBanner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filemask"
     */
    public function testPropertyFilemask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dirmask"
     */
    public function testPropertyDirmask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fxp"
     */
    public function testPropertyFxp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "resume"
     */
    public function testPropertyResume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultroot"
     */
    public function testPropertyDefaultroot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ident"
     */
    public function testPropertyIdent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reversedns"
     */
    public function testPropertyReversedns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "masqaddress"
     */
    public function testPropertyMasqaddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passiveportsmin"
     */
    public function testPropertyPassiveportsmin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passiveportsmax"
     */
    public function testPropertyPassiveportsmax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "localuserbw"
     */
    public function testPropertyLocaluserbw()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "localuserdlbw"
     */
    public function testPropertyLocaluserdlbw()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anonuserbw"
     */
    public function testPropertyAnonuserbw()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anonuserdlbw"
     */
    public function testPropertyAnonuserdlbw()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls"
     */
    public function testPropertyTls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_policy"
     */
    public function testPropertyTlsPolicy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_allow_client_renegotiations"
     */
    public function testPropertyTlsOptAllowClientRenegotiations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_allow_dot_login"
     */
    public function testPropertyTlsOptAllowDotLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_allow_per_user"
     */
    public function testPropertyTlsOptAllowPerUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_common_name_required"
     */
    public function testPropertyTlsOptCommonNameRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_enable_diags"
     */
    public function testPropertyTlsOptEnableDiags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_export_cert_data"
     */
    public function testPropertyTlsOptExportCertData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_no_cert_request"
     */
    public function testPropertyTlsOptNoCertRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_no_empty_fragments"
     */
    public function testPropertyTlsOptNoEmptyFragments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_no_session_reuse_required"
     */
    public function testPropertyTlsOptNoSessionReuseRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_stdenvvars"
     */
    public function testPropertyTlsOptStdenvvars()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_dns_name_required"
     */
    public function testPropertyTlsOptDnsNameRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tls_opt_ip_address_required"
     */
    public function testPropertyTlsOptIpAddressRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ssltls_certificate"
     */
    public function testPropertySsltlsCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "options"
     */
    public function testPropertyOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
